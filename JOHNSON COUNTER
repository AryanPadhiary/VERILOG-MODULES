// VERILOG CODE
module johnson_counter (
    input wire clk,
    input wire reset,
    output reg [3:0] q
);
    always @(posedge clk or posedge reset) begin
        if (reset)
            q <= 4'b0000;
        else
            q <= {~q[0], q[3:1]};
    end
endmodule

// TESTBENCH
module tb_johnson_counter;
    reg clk;
    reg reset;
    wire [3:0] q;
    
    // Instantiate the Johnson counter
    johnson_counter uut (
        .clk(clk),
        .reset(reset),
        .q(q)
    );
    
    // Clock generation
    always #5 clk = ~clk;
    
    // Testbench code
    initial begin
        // Initialize inputs
        clk = 0;
        reset = 1;
        #10;  // Wait for 10 time units
        
        // Release reset
        reset = 0;
        
        // Observe the counter behavior
        #100;
        
        // End simulation
        $stop;
    end
    
    // Monitor output
    initial begin
        $monitor("Time = %0d, q = %b", $time, q);
    end
endmodule
